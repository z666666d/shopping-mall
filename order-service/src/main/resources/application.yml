server:
  port: 8001

spring:
  application:
    name: @artifactId@
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://192.168.17.102:3306/order?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
  redis:
    sentinel:
      master: mymaster
      nodes: 192.168.17.105:26379,192.168.17.106:26379,192.168.17.107:26379
    #redis数据库索引，默认是0
    database: 0
    #redis服务器地址，这里用本地的redis
    # Redis服务器连接密码（默认为空）
    password: 112233
    #redis服务器连接端口，默认是6379
    port: 6379
    # 连接超时时间（毫秒）
    timeout: 1000
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0

  cloud:
    stream:
      binders:
        myRabbit:
          #消息中间件类型
          type: rabbit
          #rabbitmq连接信息配置
          environment:
            spring:
              rabbitmq:
                host: 192.168.17.202
                port: 5672
                username: root
                password: 123456
                virtual-host: /
      #添加消息消费相关信息，默认会创建队列，并绑定到exchange上，绑定路由键默认为#
      bindings:
        msgChannel:
          destination: account-change
          default-binder: myRabbit
          group: myGroup
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.shopping.entities

eureka:
  client:
    #表示将本服务注册进eureka server 默认为true
    register-with-eureka: true
    #是否从Eureka Server抓取已有的注册信息，默认为true。
    #单节点无所谓，集群必须要设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:7001/eureka
      defaultZone: http://192.168.17.101:7001/eureka/,http://192.168.17.103:7002/eureka/
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 15
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
    #eureka客户端向服务端发送心跳时间间隔，默认为30秒
    #lease-renewal-interval-in-seconds: 1
    #eureka在收到最后一次心跳后等待时间，超时后剔除服务。默认为90秒
    #lease-expiration-duration-in-seconds: 2

